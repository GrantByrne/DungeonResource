@model IEnumerable<DungeonResource.Components.Domain.Spell.Spell>

@{
    ViewBag.Title = "Dungeon Resource";
}

<div class="form-signin">

    <h2>@ViewBag.Title</h2>

    <h3>Manage All Your Spells With Ease</h3>

    <p>
        With SpellBook You Can Easily Research All the Spells Available
        to You for Dungeons and Dragons. Search for technical details for that hard to
        find spell and make it out of the Dungeon Alive
    </p>

    <br />

    <div class="accordion" id="accordion2">

        @foreach (var someClass in @Model.SelectMany(p => p.SpellLevels).Select(p => p.SpellClass).OrderBy(x => x).Distinct())
        {
            <div class="accordion-group">
                <div class="accordion-heading">
                    <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapse-@(someClass.Replace(" ", ""))">@someClass</a>
                </div>

                <div id="collapse-@(someClass.Replace(" ", ""))" class="accordion-body collapse">
                    <div class="accordion-inner">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Spell Name</th>
                                    <th>Range</th>
                                    <th>Spell Resistance</th>
                                    <th>Level</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Where(p => p.SpellLevels.Exists(r => r.SpellClass == someClass)).OrderBy(p => p.Name))
                                {
                                    <tr>
                                        <td>@Html.ActionLink(item.Name, "Details", new { ID = item.Id })</td>
                                        <td>@item.Range</td>
                                        <td>@(item.SpellResistance ? "Yes" : "No")</td>
                                        <td>@item.SpellLevels[0].Level</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }

        @if (Request.IsAuthenticated)
        {
            <br />
            <a href="@Url.Action("Create")" class="btn btn-large btn-inverse btn-block">Add Spell</a>
        }

    </div>

</div>
